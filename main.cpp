/*
Задача 2
Что нужно сделать:
Кролик сидит на нулевой ступеньке большой лестницы. Он может прыгать на одну или более ступенек вверх, но не далее чем на k. 
Кролик хочет допрыгать до n-й ступеньки, но может сделать это большим количеством способов.
Напишите рекурсивную функцию, которая принимает число n типа int и число k — максимальную длину прыжка, а возвращает количество 
способов, которым кролик может доскакать до n-й ступеньки. В функции для аргумента “максимальная длина прыжка” задать значение, 
по умолчанию равное 3.

Пример:
Ввод: 3, 2
Вывод: 3
Пояснение: (1,2), (2,1), (1,1,1)

Чек-лист для проверки задачи:
• Функция принимает корректные типы данных, тип возвращаемого значения — int.
• Функция не использует библиотек кроме <iostream>.
• Функция рекурсивная.
• Функция содержит значение по умолчанию.
*/

#include <iostream>

using namespace std;

int get_count_ways(int n, int k=3){
    if (n==0){
        return 1;
    }

    int res = 0;
    int min;
    if (k<=n){
        min = k;
    }
    else {
        min = n;
    }
    for (int i=1; i<=min; ++i){
        res+=get_count_ways(n-i,k);
    }
    return res;
    
}

int main(){
    cout << get_count_ways(3,2);
}